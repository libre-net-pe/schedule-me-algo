name: Deploy TypeDoc to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI: true
      NODE_ENV: production
      NPM_CONFIG_LOGLEVEL: verbose
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          
      - name: Debug npm environment
        run: |
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
          echo "NPM config:"
          npm config list
          echo "Package.json exists: $(test -f package.json && echo 'yes' || echo 'no')"
          echo "Package-lock.json exists: $(test -f package-lock.json && echo 'yes' || echo 'no')"
          echo "Current directory: $(pwd)"
          echo "Directory contents:"
          ls -la
          
      - name: Install dependencies
        run: |
          echo "Starting npm ci with debug output..."
          # npm ci --timeout=300000 --verbose --no-audit
          npm Install
        
      - name: Debug package.json scripts
        run: |
          echo "Available npm scripts:"
          npm run
          echo "Package.json scripts section:"
          cat package.json | jq '.scripts' || echo "Failed to parse package.json scripts"
          
      - name: Generate TypeDoc documentation
        run: |
          echo "Starting documentation generation..."
          npm run docs:build --verbose
          echo "Documentation generation completed"
          echo "Generated files in docs directory:"
          ls -la docs/ || echo "docs directory not found"
        
      - name: Validate documentation output
        run: |
          echo "Validating documentation was generated correctly..."
          if [ ! -d "docs" ]; then
            echo "ERROR: docs directory does not exist!"
            exit 1
          fi
          echo "Documentation directory contents:"
          find docs -type f -name "*.html" | head -10 || echo "No HTML files found"
          echo "Total files in docs: $(find docs -type f | wc -l)"
          
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4